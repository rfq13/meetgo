# Build stage
FROM golang:1.25-alpine AS builder

# Install git and ca-certificates
RUN apk add --no-cache git ca-certificates

# Set the working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the WebSocket server
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o websocket-server ./cmd/websocket

# Final stage
FROM alpine:latest

# Install ca-certificates for HTTPS requests and wget for health check
RUN apk --no-cache add ca-certificates wget

# Set the working directory
WORKDIR /app

# Copy the binary from builder stage
COPY --from=builder /app/websocket-server .

# Copy configuration files
COPY --from=builder /app/configs ./configs

# Create a non-root user and change ownership in single RUN command
RUN addgroup -g 1001 -S wsgroup && \
    adduser -u 1001 -S wsuser -G wsgroup && \
    chown -R wsuser:wsgroup /app

# Switch to non-root user
USER wsuser

# Expose port
EXPOSE 8081

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8081/health || exit 1

# Run the binary
CMD ["./websocket-server"]